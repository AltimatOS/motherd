INSIDE INITRD:

After the boot loader executes the selected kernel and passes it the boot arguments, the kernel loads it's built-in drivers, including initrd support. This loads the initrd file from the hard disk, and then mounts it as the temporary rootfs for the operating system. At this point, the kernel tries to load linuxrc, which is not present, then /sbin/init. Finding /sbin/init, which is a symlink to /sbin/initldr, it loads it as PID 1.

At this point, InitLrd sets itself as the process leader and disables specific signals from interfering with it's operation. After it's environment is set as it desires, it then spawns /sbin/MotherD and attempts to signal MotherD that it is inside the initrd phase by sending a command to the UNIX Socket MotherD uses for legacy communications, expecting an OK response, and will reattempt if the socket does not allow connection.

At start of MotherD, it attempts to opens it's UNIX Socket to allow commands to be passed to it. Once it starts, the signal from InitLdr should be delivered, and MotherD responses with an OK response. This event type forces MotherD to run only service units that are single-shot, which in the initrd are:

* MountD-specials
* eudev-pre-rootfs
* MountD-rootfs-pre-pivot
* MountD-specials-pre-pivot

MountD-specials mounts /dev as DevTmpFS, /sys as SysFS, and /proc as ProcFS and then exits without going into daemon mode.

Eudev-pre-rootfs triggers the kernel to populate the dev nodes inside /dev on the initrd.

MountD-rootfs-pre-pivot reads the kernel command line to discover which volume the root filesystem resides on, then mounts it at /rootfs

After these complete execution successfully, MotherD runs a pivot_root call to force the rootfs namespace to transfer to the volume mounted at /rootfs, then sends a signal to initldr to exec /sbin/initldr on the new rootfs once MotherD terminates. Then, MotherD shuts down to remove any remaining stale file locks.

Once MotherD exits, the initldr instance in the initrd runs exec on /sbin/initldr.

AFTER INITRD


kernel
|-> init => /sbin/init is a symbolic link to /sbin/initldr: very simple init
|--> MotherD: Service Manager, does not run as PID 1
|---> MountsD: Filesystems mount manager. Started first since it must mount
|              /dev as devtmpfs for eudevd
|---> eudevd: Gentoo fork of Udev that populates /dev based on Kernel events
|---> ConsoleD: Virtual Console manager
|---> SessionsD: Login session manager

After standing up the standard tooling used inside the initrd, MotherD sends a signal to initldr, which is running as /sbin/init to clean and pivot to the mounted rootfs, which then brings down consoled, eudevd, and mountsd, asks motherd to terminate, then pivot_root is called with exec to /sbin/initldr.

  